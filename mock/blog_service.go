// Code generated by mockery v2.9.4. DO NOT EDIT.

package mock

import (
	context "context"

	pa "github.com/Lambels/patrickarvatu.com"
	mock "github.com/stretchr/testify/mock"
)

// BlogService is an autogenerated mock type for the BlogService type
type BlogService struct {
	mock.Mock
}

// CreateBlog provides a mock function with given fields: ctx, blog
func (_m *BlogService) CreateBlog(ctx context.Context, blog *pa.Blog) error {
	ret := _m.Called(ctx, blog)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *pa.Blog) error); ok {
		r0 = rf(ctx, blog)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteBlog provides a mock function with given fields: ctx, id
func (_m *BlogService) DeleteBlog(ctx context.Context, id int) error {
	ret := _m.Called(ctx, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindBlogByID provides a mock function with given fields: ctx, id
func (_m *BlogService) FindBlogByID(ctx context.Context, id int) (*pa.Blog, error) {
	ret := _m.Called(ctx, id)

	var r0 *pa.Blog
	if rf, ok := ret.Get(0).(func(context.Context, int) *pa.Blog); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pa.Blog)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindBlogs provides a mock function with given fields: ctx, filter
func (_m *BlogService) FindBlogs(ctx context.Context, filter pa.BlogFilter) ([]*pa.Blog, int, error) {
	ret := _m.Called(ctx, filter)

	var r0 []*pa.Blog
	if rf, ok := ret.Get(0).(func(context.Context, pa.BlogFilter) []*pa.Blog); ok {
		r0 = rf(ctx, filter)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*pa.Blog)
		}
	}

	var r1 int
	if rf, ok := ret.Get(1).(func(context.Context, pa.BlogFilter) int); ok {
		r1 = rf(ctx, filter)
	} else {
		r1 = ret.Get(1).(int)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, pa.BlogFilter) error); ok {
		r2 = rf(ctx, filter)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// UpdateBlog provides a mock function with given fields: ctx, update
func (_m *BlogService) UpdateBlog(ctx context.Context, update pa.BlogUpdate) (*pa.Blog, error) {
	ret := _m.Called(ctx, update)

	var r0 *pa.Blog
	if rf, ok := ret.Get(0).(func(context.Context, pa.BlogUpdate) *pa.Blog); ok {
		r0 = rf(ctx, update)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pa.Blog)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, pa.BlogUpdate) error); ok {
		r1 = rf(ctx, update)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
